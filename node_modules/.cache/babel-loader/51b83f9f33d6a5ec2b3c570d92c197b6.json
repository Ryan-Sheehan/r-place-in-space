{"ast":null,"code":"import _classCallCheck from \"/Users/ryansheehan/mywebsites/mapper/mapper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryansheehan/mywebsites/mapper/mapper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryansheehan/mywebsites/mapper/mapper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryansheehan/mywebsites/mapper/mapper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryansheehan/mywebsites/mapper/mapper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryansheehan/mywebsites/mapper/mapper/src/MyComponent.js\";\nimport React, { Component } from 'react';\nimport { geolocated } from 'react-geolocated';\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyComponent, _Component);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      lat: null,\n      long: null,\n      address: null,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.what3words.com/v2/reverse?coords=59.521251%2C-0.203586&key=DECNMYWK\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          address: result.words,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._loadCoordData();\n\n      if (this.props.coords !== null) {\n        console.log(\"we got coords\");\n        console.log(this.props.coords); //this.fetchWhat3Words();\n      }\n    }\n  }, {\n    key: \"fetchWhat3Words\",\n    value: function fetchWhat3Words() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          lat = _this$state.lat,\n          long = _this$state.long;\n      fetch(\"https://api.what3words.com/v2/reverse?coords=59.521251%2C-0.203586&key=DECNMYWK\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this3.setState({\n          isLoaded: true,\n          address: result.words,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this3.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"_loadCoordData\",\n    value: function _loadCoordData() {// Cancel any in-progress requests\n      // Load new data and update profileOrError\n    }\n  }, {\n    key: \"getCoordsDom\",\n    value: function getCoordsDom() {\n      return !this.props.isGeolocationAvailable ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Your browser does not support Geolocation\") : !this.props.isGeolocationEnabled ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Geolocation is not enabled\") : this.props.coords ? React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"latitude\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.props.coords.latitude)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"longitude\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.coords.longitude)))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Getting the location data\\u2026 \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          lat = _this$state2.lat,\n          long = _this$state2.long,\n          items = _this$state2.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, items.words), React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"latitude\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, lat)), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"long\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, long)))));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      // Store prevUserId in state so we can compare when props change.\n      // Clear out any previously-loaded user data (so we don't render stale stuff).\n      if (nextProps.coords !== prevState.coords) {\n        return {\n          myCoords: nextProps.coords\n        };\n      } // No state update necessary\n\n\n      return null;\n    }\n  }]);\n\n  return MyComponent;\n}(Component);\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(MyComponent);","map":{"version":3,"sources":["/Users/ryansheehan/mywebsites/mapper/mapper/src/MyComponent.js"],"names":["React","Component","geolocated","MyComponent","props","state","error","isLoaded","lat","long","address","items","fetch","then","res","json","result","setState","words","prevProps","prevState","_loadCoordData","coords","console","log","isGeolocationAvailable","isGeolocationEnabled","latitude","longitude","message","nextProps","myCoords","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      lat: null,\n      long: null,\n      address: null,\n      items: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // Store prevUserId in state so we can compare when props change.\n    // Clear out any previously-loaded user data (so we don't render stale stuff).\n    if (nextProps.coords !== prevState.coords) {\n      return {\n        myCoords: nextProps.coords,\n      };\n    }\n\n    // No state update necessary\n    return null;\n  }\n\n  componentDidMount() {\n    \n    fetch(\"https://api.what3words.com/v2/reverse?coords=59.521251%2C-0.203586&key=DECNMYWK\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            address: result.words,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n      this._loadCoordData();\n      if (this.props.coords !== null) {\n        console.log(\"we got coords\");\n        console.log(this.props.coords)\n\n        //this.fetchWhat3Words();\n      }\n  }\n\n  fetchWhat3Words() {\n    const {lat, long} = this.state;\n    fetch(\"https://api.what3words.com/v2/reverse?coords=59.521251%2C-0.203586&key=DECNMYWK\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            address: result.words,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n    _loadCoordData() {\n    // Cancel any in-progress requests\n    // Load new data and update profileOrError\n  }\n\n\n\n  getCoordsDom() {\n    return !this.props.isGeolocationAvailable\n      ? <div>Your browser does not support Geolocation</div>\n      : !this.props.isGeolocationEnabled\n        ? <div>Geolocation is not enabled</div>\n        : this.props.coords\n          ? <table>\n            <tbody>\n              <tr><td>latitude</td><td>{this.props.coords.latitude}</td></tr>\n              <tr><td>longitude</td><td>{this.props.coords.longitude}</td></tr>\n            </tbody>\n          </table>\n          : <div>Getting the location data&hellip; </div>;\n  }\n\n  render() {\n    const { error, isLoaded, lat, long, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n        <p>\n          {items.words}\n        </p>\n      <table>\n      <tbody>\n        <tr><td>latitude</td><td>{lat}</td></tr>\n              <tr><td>long</td><td>{long}</td></tr>\n            </tbody>\n            </table>\n        </div>\n      );\n    }\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n}) (MyComponent);"]},"metadata":{},"sourceType":"module"}